pipeline {
    agent any
    stages ('Create') {
      when {
          expression {
              params.action == 'Create'
          }
      }
      stage ('SCM') {
        steps {
          sh 'rm -rf /tmp/source'
          sh 'mkdir /tmp/source'
          sh 'cd /tmp/source && git clone "https://github.com/shahar5/bakery-01.git"'
        }
      }
      stage ('Terraform init') {
        steps {
          sh 'cd /tmp/source/bakery-01/shahar\'s-PRs/bakery-project/'
          sh 'terraform init'
        }
      }
      stage ('Terraform plan') {
        steps {
          sh 'cd /tmp/source/bakery-01/shahar\'s-PRs/bakery-project/'
          withCredentials([[
            $class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'],
            sshUserPrivateKey(credentialsId: 'aws-key', keyFileVariable: 'aws-key-jen', usernameVariable: 'con-user-jen'),
            ]) {
            sh "terraform plan -var 'region=${params.region}' -var 'connection-key=${aws-key-jen}' -var 'connection-user=${con-user-jen}' -var 'AWS_CREDS=${AWS_ACCESS_KEY_ID}:${AWS_SECRET_ACCESS_KEY}' -var 's3_folder_path=${params.s3_folder_path}' -var 'data_folder_path=${params.data_folder_path}'"
          }
        }
      }
      stage ('Terraform apply') {
        steps {
          sh 'cd /tmp/source/bakery-01/shahar\'s-PRs/bakery-project/'
          sh 'terraform apply --auto-approve'
        }
      }
    }
}
